
#include <stdio.h>
#include <io.h>

#define Hash_Control (volatile unsigned char *)(0x4000300)
#define Hash_Status (volatile unsigned char *)	(0x4000300)
#define Hash_Base (volatile unsigned char *)	(0x4000310)
void hashNum(int num){
	  IOWR_8DIRECT(Hash_Base,0,num);
	  IOWR_8DIRECT(Hash_Control,0,2);
	  int status, done;
	  do{
		  status = IORD_8DIRECT(Hash_Status,0);
		  done = status & 1;
	  }
	  while(done != 1);
}

int readHash(int offset){
	return IORD_8DIRECT(Hash_Base,offset);
}

void Reset(){
	IOWR_8DIRECT(Hash_Control,0,1);
	  IOWR_8DIRECT(Hash_Control,0,0);
}

int hashString(char *c){
	int i;
	for(i = 0; i < strlen(c); i++){
		hashNum(c[i]);
	}
	return readHash(0);
}

char* readWholeHash(){
	long long hash = 0;
	int i;
	for(i = 0; i < 32; i++){
		hash += readHash(i*2);
	}
	char hex[(int)(log(hash)/log(16))+1];
	sprintf(hex,"%x",hash);
	return hex;
}

int main()
{
  printf("Hello from Nios II!\n");
  printf("Initial hash: %d\n", IORD_8DIRECT(Hash_Base,0));
  Reset();
  printf("Reset: %d\n", IORD_8DIRECT(Hash_Base,0));
  char* c = "hello world";
  int done,hash,i,j,status;
  do{
  status = IORD_8DIRECT(Hash_Status,0);

  done = status & 1;
  }
  while(done == 0);
  for(i = 0; i < 32; i++){
	  printf("index %d: %d\n",i,readHash(2*i));
  }
  printf("Done\n");
  return 0;
}
